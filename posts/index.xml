<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on anitabyte</title>
    <link>/posts/</link>
    <description>Recent content in Posts on anitabyte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Oct 2023 23:59:15 +0100</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Listening - 2023-10-01</title>
      <link>/posts/listening_2023-10-01/</link>
      <pubDate>Sun, 01 Oct 2023 23:59:15 +0100</pubDate>
      
      <guid>/posts/listening_2023-10-01/</guid>
      <description>Artist Title Album Plays 1 Japanese Breakfast Posing in Bondage Jubilee 8 2 Japanese Breakfast Be Sweet Jubilee 8 3 Courtney Barnett Pedestrian at Best Sometimes I Sit and Think, and Sometimes I Just Sit 7 4 Japanese Breakfast Slide Tackle Jubilee 6 5 Japanese Breakfast Savage Good Boy Jubilee 6 6 Japanese Breakfast In Hell Jubilee 6 7 Olivia Rodrigo bad idea right? GUTS 5 8 Japanese Breakfast Paprika Jubilee 4 9 Japanese Breakfast Kokomo, IN Jubilee 4 10 Olivia Rodrigo love is embarrassing GUTS 3 I&amp;rsquo;ve been reading Crying in H Mart and it&amp;rsquo;s already changed how I view Japanese Breakfast&amp;rsquo;s music: everything in Slide Tackle&amp;rsquo;s revisiting of an obsession and wanting to be better has become a matter of the fact that Michelle Zauner&amp;rsquo;s mother insisted she could never keep up with her extracurriculars as a child.</description>
      <content>&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Artist&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;Album&lt;/th&gt;
&lt;th&gt;Plays&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Japanese Breakfast&lt;/td&gt;
&lt;td&gt;Posing in Bondage&lt;/td&gt;
&lt;td&gt;Jubilee&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Japanese Breakfast&lt;/td&gt;
&lt;td&gt;Be Sweet&lt;/td&gt;
&lt;td&gt;Jubilee&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Courtney Barnett&lt;/td&gt;
&lt;td&gt;Pedestrian at Best&lt;/td&gt;
&lt;td&gt;Sometimes I Sit and Think, and Sometimes I Just Sit&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Japanese Breakfast&lt;/td&gt;
&lt;td&gt;Slide Tackle&lt;/td&gt;
&lt;td&gt;Jubilee&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Japanese Breakfast&lt;/td&gt;
&lt;td&gt;Savage Good Boy&lt;/td&gt;
&lt;td&gt;Jubilee&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Japanese Breakfast&lt;/td&gt;
&lt;td&gt;In Hell&lt;/td&gt;
&lt;td&gt;Jubilee&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;Olivia Rodrigo&lt;/td&gt;
&lt;td&gt;bad idea right?&lt;/td&gt;
&lt;td&gt;GUTS&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;Japanese Breakfast&lt;/td&gt;
&lt;td&gt;Paprika&lt;/td&gt;
&lt;td&gt;Jubilee&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;Japanese Breakfast&lt;/td&gt;
&lt;td&gt;Kokomo, IN&lt;/td&gt;
&lt;td&gt;Jubilee&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Olivia Rodrigo&lt;/td&gt;
&lt;td&gt;love is embarrassing&lt;/td&gt;
&lt;td&gt;GUTS&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I&amp;rsquo;ve been reading &lt;a href=&#34;https://en.wikipedia.org/wiki/Crying_in_H_Mart&#34;&gt;&lt;em&gt;Crying in H Mart&lt;/em&gt;&lt;/a&gt; and it&amp;rsquo;s already changed how I view Japanese Breakfast&amp;rsquo;s music: everything in &lt;em&gt;Slide Tackle&lt;/em&gt;&amp;rsquo;s revisiting of an obsession and wanting to be better has become a matter of the fact that Michelle Zauner&amp;rsquo;s mother insisted she could never keep up with her extracurriculars as a child. Was football another one of these? Did she wish she could have &amp;lsquo;[navigated] the hate in her heart&amp;rsquo; to stick with the sport? Is the &amp;lsquo;ache&amp;rsquo; she sought to meet the one for a past love of a sport? Sometimes heartbreak is just heartbreak, as much as Gareth Campesinos&amp;rsquo;s love of football allegories may have conditioned me otherwise when someone mentions the ugly game: &lt;em&gt;For Whom The Belly Tolls&lt;/em&gt;&amp;rsquo;s &amp;lsquo;Scout yourself as a one-man team/You&amp;rsquo;re a one-club man denied a testimonial&amp;rsquo; and &lt;em&gt;Every Defeat a Divorce&lt;/em&gt;&amp;rsquo;s turning-around of &lt;em&gt;Three Lions&lt;/em&gt; will probably remain for the rest of my life the only things inspired by football that have brought any beauty into the world.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Jubilee&lt;/em&gt; is a beautiful album. It&amp;rsquo;s probably the most accessible of Japanese Breakfast&amp;rsquo;s albums, but retains the experimentation present on &lt;em&gt;Soft Sounds from Another Planet&lt;/em&gt; on tracks such as &lt;em&gt;Posing in Bondage&lt;/em&gt;, creating an incredible sense of sonic space between Zauner&amp;rsquo;s vocals and instrumentation lending a certain eeriness to the to the track that really makes the feeling of distance evoked by the lyrics work. &lt;em&gt;Be Sweet&lt;/em&gt; is just a fantastic funk-inspired track that proves itself an inescapable earworm. The wail of &amp;lsquo;Hell is finding someone to love/And I can&amp;rsquo;t have you&amp;rsquo; on &lt;em&gt;In Hell&lt;/em&gt; serves as an emotional highpoint of the album and underscores that this isn&amp;rsquo;t really an album about loss in the abstract - not an album that would suit a pained sports metaphor - but an unrestrained ode to things that once were.&lt;/p&gt;
&lt;p&gt;I worry that no matter how old I get, I will always find angsty pop-punk something that I get more than I would care to admit out of. &lt;em&gt;GUTS&lt;/em&gt;, as an album, definitely evokes my teenage years - replete with questionable choices around capitalisation. This is strange given that I&amp;rsquo;m in my early (honestly) thirties and Olivia Rodrigo still has the benefit of youth. It&amp;rsquo;s probably something that doesn&amp;rsquo;t warrant too much analysis: I could get into how milennials have seemingly grown into an extended adolesence that is a reaction to being raised by the latchkey kids that were Gen X, but I don&amp;rsquo;t really think it&amp;rsquo;s that deep. It&amp;rsquo;s an album of good pop songs about heartbreak. I say good pop songs because I&amp;rsquo;m choosing to ignore the &amp;lsquo;rhyming&amp;rsquo; couplet &amp;lsquo;Lacy, oh Lacy/skin like puff pastry&amp;rsquo; on &lt;em&gt;Lacy&lt;/em&gt; that is just&amp;hellip; questionable. If my skin is like puff pastry, it&amp;rsquo;s time to switch up my skincare routine. That&amp;rsquo;s an affliction, not a point of praise.&lt;/p&gt;
&lt;p&gt;Courtney Barnett is the writer I wish I was. She has this sort of sardonic playfulness and ability to turn a phrase that inspires nothing but envy in me. &amp;lsquo;Put me on a pedestal and I&amp;rsquo;ll only disappoint you/Tell me I&amp;rsquo;m exceptional, I promise to exploit you&amp;rsquo; from &lt;em&gt;Pedestrian at Best&lt;/em&gt; underscores this: she&amp;rsquo;s deeply uncomfortable with the success that&amp;rsquo;s she&amp;rsquo;s found and feels that she doesn&amp;rsquo;t deserve it - &amp;lsquo;Under-worked and over-sexed, I must express my disinterest/The rats are back inside my head, what would Freud have said?&amp;rsquo; further underscoring this feeling of undeservedness. Given my own success in work and my own disaffection with, well, myself, it&amp;rsquo;s a real &amp;lsquo;it me, for real for real&amp;rsquo;. It&amp;rsquo;s a contrast with &lt;em&gt;Lacy&lt;/em&gt;&amp;rsquo;s &amp;lsquo;I want to fuck you with my jealousy dick&amp;rsquo;, tending far more to &amp;lsquo;you shouldn&amp;rsquo;t want to jealously-fuck me.&amp;rsquo; I think part of the reason that Barnett is a much better writer than me is that she wouldn&amp;rsquo;t try to make the jealousy-dick bit work because she found it funny. Maybe.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note to self&lt;/strong&gt;: find a better way to get a table out of ListenBrainz data than manually creating a Markdown table. No one should live like this.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Pi Any Means Necessary #2: Software availability</title>
      <link>/posts/pi_any_means_necessary_2/</link>
      <pubDate>Fri, 22 Sep 2023 12:36:37 +0100</pubDate>
      
      <guid>/posts/pi_any_means_necessary_2/</guid>
      <description>I&amp;rsquo;ve taken for granted in the past that if I&amp;rsquo;m on a Raspberry Pi, I&amp;rsquo;m going to have an easy time of getting software for ARM: it&amp;rsquo;s all-but the default platform for which ARM software is built, given the prevalence of the board in the marketplace. This isn&amp;rsquo;t - for now, at least - so true if you&amp;rsquo;re on a 64-bit OS. In spite of the Pi having a 64-bit processor since the Pi 3, the software ecosystem hasn&amp;rsquo;t quite caught up to that.</description>
      <content>&lt;p&gt;I&amp;rsquo;ve taken for granted in the past that if I&amp;rsquo;m on a Raspberry Pi, I&amp;rsquo;m going to have an easy time of getting software for ARM: it&amp;rsquo;s all-but the default platform for which ARM software is built, given the prevalence of the board in the marketplace. This isn&amp;rsquo;t - for now, at least - so true if you&amp;rsquo;re on a 64-bit OS. In spite of the Pi having a 64-bit processor since the Pi 3, the software ecosystem hasn&amp;rsquo;t quite caught up to that. This isn&amp;rsquo;t an issue for things distributed by Debian - all of that ends up in the core repositories and is only an &lt;code&gt;apt install&lt;/code&gt; away - but for things distributed in the likes of AppImages or Flatpaks, this poses more of a problem.&lt;/p&gt;
&lt;p&gt;I run a 3D printing shop online and use &lt;a href=&#34;https://github.com/prusa3d/PrusaSlicer/releases&#34;&gt;PrusaSlicer&lt;/a&gt; for preparing 3D models for printing. I was pleased to see that there is an ARMv7l AppImage available to download and decided to give it a go, having checked that I&amp;rsquo;d enabled &lt;code&gt;armhf&lt;/code&gt; as an architecture using &lt;code&gt;dpkg --add-architecture armhf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This was not enough to get me to a point where the AppImage would run, with me being told that I was missing &lt;code&gt;ld-linux-armhf.so.3&lt;/code&gt;. This made sense, I thought, given that I&amp;rsquo;d only added the architecture&amp;rsquo;s to &lt;code&gt;apt&lt;/code&gt;&amp;rsquo;s configuration and not actually installed the packages. I went through some iteration of installing &lt;code&gt;armhf&lt;/code&gt; packages before I&amp;hellip; just gave up. Having installed &lt;code&gt;zlib1g:armhf&lt;/code&gt;, &lt;code&gt;libfuse2:armhf&lt;/code&gt;, &lt;code&gt;libstdc++6:armhf&lt;/code&gt;, &lt;code&gt;libbz2-1.0:armhf&lt;/code&gt;, &lt;code&gt;liblzma5:armhf&lt;/code&gt;, &lt;code&gt;libgl1:armhf&lt;/code&gt;, &lt;code&gt;libsm6:armhf&lt;/code&gt;, &lt;code&gt;libglib2.0-0:armhf&lt;/code&gt;, &lt;code&gt;libatk1.0-0:armhf&lt;/code&gt; and &lt;code&gt;libgdk-pixbuf-2.0-0:armhf&lt;/code&gt;, I realised that I&amp;rsquo;d probably end up installing an entire &lt;code&gt;armhf&lt;/code&gt; userland if I carried on this way.&lt;/p&gt;
&lt;p&gt;Rather than committing to the eternal iteration of package installs, I decided to bite the bullet and simply compile the application myself. Fortunately, PrusaSlicer&amp;rsquo;s &lt;a href=&#34;https://github.com/prusa3d/PrusaSlicer/blob/master/doc/How%20to%20build%20-%20Linux%20et%20al.md&#34;&gt;build instructions&lt;/a&gt; are good and complete, providing an accurate list of dependencies and being based on the assumption of a Debian-based system - making them easy enough to follow on Raspberry Pi OS. I&amp;rsquo;m lucky enough to be on an 8GB Pi 4, so didn&amp;rsquo;t run into any issues during the linking step: if I were on a 2GB or 4GB Pi, this would likely be a post about ARM cross-compilation. Fortunately we don&amp;rsquo;t have to involve ourselves with the Dark Arts here.&lt;/p&gt;
&lt;p&gt;The build itself took about an hour, resulting in a PrusaSlicer binary that happily ran. The performance of the 3D viewport in the application isn&amp;rsquo;t &lt;em&gt;great&lt;/em&gt;, but I didn&amp;rsquo;t expect otherwise. Slicing, however, &lt;em&gt;feels&lt;/em&gt; competitive with my Ryzen 9 7950X3D, which surprised me. I know that most slicing algorithms are limited by the performance of a single core and don&amp;rsquo;t multithread well, but not being frustrated with how long it took was a pleasant treat to receive.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve since found that out that &lt;a href=&#34;https://github.com/davidk/PrusaSlicer-ARM.AppImage/releases&#34;&gt;someone builds ARM64 PrusaSlicer AppImages and makes them available to download&lt;/a&gt;. Oh well.&lt;/p&gt;
&lt;p&gt;In my 3D printing workflow, I also use FreeCAD. This was available directly from the Raspberry Pi OS repositories and - again, surprising to me - was perfectly usable on the Pi. I&amp;rsquo;d expected frustrating amounts of latency with graphical updates and recalculations, but it&amp;rsquo;s very useable. This is of course a massively subjective measure of the performance of an application, but it&amp;rsquo;s ultimately the most important one: I feel like I&amp;rsquo;m capable of doing the work I need to do on the Pi without feeling like I&amp;rsquo;m limited by my hardware.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Pi Any Means Necessary #1: Overclocking and cooling</title>
      <link>/posts/pi_any_means_necessary_1/</link>
      <pubDate>Wed, 19 Jul 2023 22:36:37 +0100</pubDate>
      
      <guid>/posts/pi_any_means_necessary_1/</guid>
      <description>I&amp;rsquo;ve had a deep appreciation for the Raspberry Pi since it&amp;rsquo;s initial launch in 2012: the promise of a computer for the home that costs $35 (or, perversely, £35) made the possibility of a universally available and affordable computer for people&amp;rsquo;s homes a far more realistic one than it had been in my youth of attempting to learn everything I could about computers from stolen hours in public libraries and borrowed and outmoded hardware.</description>
      <content>&lt;p&gt;I&amp;rsquo;ve had a deep appreciation for the &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;Raspberry Pi&lt;/a&gt; since it&amp;rsquo;s initial launch in 2012: the promise of a computer for the home that costs $35 (or, perversely, £35) made the possibility of a universally available and affordable computer for people&amp;rsquo;s homes a far more realistic one than it had been in my youth of attempting to learn everything I could about computers from stolen hours in public libraries and borrowed and outmoded hardware.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d picked up Pis for projects in the past and not really used them in the capacity of a real &amp;lsquo;desktop&amp;rsquo; computer, but rather used them as headless devices to act as servers and the like at a more reasonable power consumption than a full x86 device. I realised that I&amp;rsquo;d not had that &amp;lsquo;real&amp;rsquo; daily-driver type experience with a Pi - in spite of my appreciation of the goal of such a cheap device being capable of acting as such - and decided to set myself the challenge of using a Raspberry Pi 4 8GB as my primary computer.&lt;/p&gt;
&lt;p&gt;So with the variant of the Pi I was going to use chosen, I still had some choices to make regarding what I was going to do in terms of the software I was going to run on it, any accessories for this &amp;lsquo;project&amp;rsquo; and how best to configure everything for as good an experience as I could get. Being a person able to make sound prioritisation decisions, I&amp;rsquo;d started with the &amp;lsquo;accessories&amp;rsquo; question.&lt;/p&gt;
&lt;p&gt;Over the years, I&amp;rsquo;ve been exposed to an awfully large number of novel homes for the Raspberry Pi, and I couldn&amp;rsquo;t be more susceptible to the idea of a cute home for my little computing pal. I&amp;rsquo;d come across the &lt;a href=&#34;https://wiki.52pi.com/index.php?title=ZP-0130&#34;&gt;52Pi ZP-0130&lt;/a&gt;, a case for the Pi that includes a case with an OLED screen on the front of it, a cooler (the &lt;a href=&#34;https://thepihut.com/products/ice-tower-raspberry-pi-4-cpu-cooler&#34;&gt;52Pi ICE Tower&lt;/a&gt;, replete with an RGB fan) for the Pi and a board that would allow me to connect a SATA M.2 SSD - one of which I had hanging around in a drawer with no idea where it had come from.&lt;/p&gt;
&lt;p&gt;I was curious to see what the benefit of having such a large heatsink and fan on the Pi would be, knowing that the processors have a habit of generating quite a bit of heat, so used &lt;a href=&#34;https://pypi.org/project/stressberry/&#34;&gt;stressberry&lt;/a&gt;, &lt;a href=&#34;https://github.com/akopytov/sysbench&#34;&gt;sysbench&lt;/a&gt;, openssl&amp;rsquo;s benchmarks and 7-Zip&amp;rsquo;s benchmark to understand a little better what I gain from each stage in the evolution from Pi with no cooling, to Pi with passive cooling from the heatsink to Pi with heatsink and fan.&lt;/p&gt;
&lt;p&gt;First, invoking stressberry with &lt;code&gt;stressberry-run --duration 900 --idle 120&lt;/code&gt; to have the processor just do a lot of work that doesn&amp;rsquo;t amount to anything but generating heat:&lt;/p&gt;

  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;sb_no_oc_no_heatsink_no_fan.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Stressberry run with no overclocking, no heatsink and no fan&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;We see that we get a fair amount of throttling at around 80 degree Celsius and upwards: at that point, the processor becomes throttled in an attempt to prevent any thermal damage. Bearing in mind that this is - at the moment, at least - how a Pi comes from the factory, the need for some sort of cooling system becomes clear.&lt;/p&gt;
&lt;p&gt;Having installed the heatsink, I ran the same stressberry test:&lt;/p&gt;

  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;sb_no_oc_heatsink_no_fan.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Stressberry run with no overclocking, heatsink fitted and no fan&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Once our test starts at 120 seconds in, the CPU hits the stock 1.8GHz and doesn&amp;rsquo;t become throttled at any point during the test. It also doesn&amp;rsquo;t hit anywhere near the same temperatures: having a fairly sizeable chunk of metal on top of the processor draws heat away from it. Who would have thought.&lt;/p&gt;
&lt;p&gt;While the heatsink seems sufficient at 1.8GHz, I was curious to see what effect turning the fan on would have on the thermals of the Pi. Running the same stressberry test again:&lt;/p&gt;

  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;sb_no_oc_heatsink_fan.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Stressberry run with no overclocking, heatsink fitted and fan turned on&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;It turns out that the combination of a large metal block to transfer the heat away from the processor combined with using the movement of air to get the heat away from the heatsink is a tried-and-true combination for cooling CPUs. Given the fetishisation of the enthusiast community for water-cooling, this may be news to some. With the fan turned on, our temperatures never break 50 degrees Celsius.&lt;/p&gt;
&lt;p&gt;But what does this mean for &amp;lsquo;real-world&amp;rsquo; performance? Well, as close as we can get to &amp;lsquo;real-world&amp;rsquo; performance with some synthetic benchmarks? For all values in the table below, higher is better.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Configuration&lt;/th&gt;
&lt;th&gt;Sysbench 8-thread CPU test  (events/s)&lt;/th&gt;
&lt;th&gt;7-Zip multithreaded benchmark Decompressing (MIPS)&lt;/th&gt;
&lt;th&gt;7-Zip multithreaded benchmark Compressing (MIPS)&lt;/th&gt;
&lt;th&gt;OpenSSL SHA256 on 16k blocks (1000s of bytes/s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;No heatsink, no fan&lt;/td&gt;
&lt;td&gt;7141.39&lt;/td&gt;
&lt;td&gt;7194&lt;/td&gt;
&lt;td&gt;3466&lt;/td&gt;
&lt;td&gt;170033.15k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Heatsink, no fan&lt;/td&gt;
&lt;td&gt;7953.79&lt;/td&gt;
&lt;td&gt;7967&lt;/td&gt;
&lt;td&gt;3760&lt;/td&gt;
&lt;td&gt;187899.19k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Heatsink and fan&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;7961.10&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;8083&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;3920&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;189683.03k&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We see that for each of the tests, heatsink outperforms non-heatsink configurations by around 5-10% in each of these tests, with fan and heatsink configurations performing marginally better again, but perhaps only within a margin of error. This is broadly what we&amp;rsquo;d expect to see given the fact that we don&amp;rsquo;t see any throttling in any configuration that involves the heatsink.&lt;/p&gt;
&lt;p&gt;If I&amp;rsquo;m using the Pi as my primary computer, I want to give it the best possible chance that I can to get the most that I can out of the board. With that in mind, and with how trivial it is to overclock the Pi with little more than a couple of changes to a config file, I went ahead and added the following to the Pi&amp;rsquo;s &lt;code&gt;/boot/config.txt&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;arm_freq=2200
gpu_freq=750
over_voltage=8
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This represents an overclock of 22.22% from the stock clock speeds of the Pi at the cost of applying a little more voltage and perhaps drawing a little more power from the wall: if you&amp;rsquo;re doing this, please make sure you&amp;rsquo;re using a decent power supply. I then ran stressberry again to ensure that the now-definitely-hotter CPU was still running in a way that wouldn&amp;rsquo;t lead to it being throttled:&lt;/p&gt;

  &lt;figure class=&#34;left&#34; &gt;
    &lt;img src=&#34;sb_oc_heatsink_fan.png&#34;   /&gt;
    
      &lt;figcaption class=&#34;center&#34; &gt;Stressberry run with overclocking, heatsink and fan&lt;/figcaption&gt;
    
  &lt;/figure&gt;


&lt;p&gt;Remarkably, even with the overclock, this cooling solution only goes around 10 degrees Celsius hotter, and the Pi seems to run stable with it. We appear to have gained a theoretical 20% performance improvement for &amp;lsquo;free&amp;rsquo;! Running our benchmarks again:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Configuration&lt;/th&gt;
&lt;th&gt;Sysbench 8-thread CPU test  (events/s)&lt;/th&gt;
&lt;th&gt;7-Zip multithreaded benchmark Decompressing (MIPS)&lt;/th&gt;
&lt;th&gt;7-Zip multithreaded benchmark Compressing (MIPS)&lt;/th&gt;
&lt;th&gt;OpenSSL SHA256 on 16k blocks (1000s of bytes/s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Heatsink and fan&lt;/td&gt;
&lt;td&gt;7961.10&lt;/td&gt;
&lt;td&gt;8083&lt;/td&gt;
&lt;td&gt;3920&lt;/td&gt;
&lt;td&gt;189683.03k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Heatsink and fan, overclocked&lt;/td&gt;
&lt;td&gt;8756.07&lt;/td&gt;
&lt;td&gt;8808&lt;/td&gt;
&lt;td&gt;3986&lt;/td&gt;
&lt;td&gt;208939.69k&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;So maybe not quite 20%, but ~10% is nothing to be scoffed at for the price of a configuration file change!&lt;/p&gt;
&lt;h3 id=&#34;appendix&#34;&gt;Appendix&lt;/h3&gt;
&lt;p&gt;The following commands were invoked for each of the tests:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sysbench&lt;/strong&gt;: &lt;code&gt;sysbench cpu --threads=8 --time=120 run&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7-Zip&lt;/strong&gt;: &lt;code&gt;7zr b&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OpenSSL&lt;/strong&gt;: &lt;code&gt;openssl speed -evp sha256&lt;/code&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
